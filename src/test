import java.lang.reflect.Array;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.Scanner;

public class asst10 {

    public static Scanner scan = new Scanner(System.in);
    public static void main(String[] args) {
    }

    //Question-1
    public static void plus(){
        Scanner scan = new Scanner(System.in);
        System.out.println("enter the first number");
        int a = scan.nextInt();
        System.out.println("enter the second number");
        int b = scan.nextInt();
        System.out.println("result: "+(a+b));
    }

    //Question-2
    public static void cube(){
        System.out.println("enter your number: ");
        int a = scan.nextInt();
        System.out.println(Math.pow(a,3));
    }

    //Question-3
    public static void hello(){
        System.out.print("Hello ");
    }
    public static void world(){
        System.out.print("World!");
    }

    //Question-4
    public static void printHollowRect(){
        for(int i=0;i<5;i++){
            StringBuilder stringBuilder=new StringBuilder();
            stringBuilder.append("* ");
            for (int j=2;j<5;j++){
                if(i==0){
                    stringBuilder.append("* ");
                }else if(i==5-1){
                    stringBuilder.append("* ");
                }else {
                    stringBuilder.append("  ");
                }
            }
            stringBuilder.append("* ");
            System.out.println(stringBuilder);
        }
    }

    //Question-5
    public static void sign(int n){
        if (n > 0){
            System.out.println(1);
        }else if(n < 0){
            System.out.println(-1);
        }else{
            System.out.println(0);
        }
    }

    //Question-6
    public static void next3(int a){
        for (int i = a; i <a+4 ; i++) {
            System.out.print(i+ " ");
        }
    }

    //Question-7
    public static boolean isPalindrome(int x){
        boolean flag = true;
        if (x == 0){
            flag = true;
        }
        if (x < 0 || x % 10 ==0){
            flag = false;
        }
        int reversed = 0;
        while (x > reversed){
            int pop = x %10;
            x /= 10;
            reversed = (reversed * 10) + pop;
        }
        if (x == reversed || x == reversed /10){
            flag = true;
        }else {
            flag = false;
        }
        System.out.println(flag);
        return flag;
    }

    //Question-8
    public static void fib(int num){
        int n1 =0;
        int n2= 1;


        for (int i = 2; i <num ; i++) {
            int sum = n1+n2;
            System.out.print(sum+" ");
            n1 = n2;
            n2 = sum;

        }
    }

    //Question-9
    public static int max(int x, int max){
        if (x > max){
           return x;
        }else {
            return max;
        }

    }

    //Question-10
    public static boolean isEven(int num){
        if (num % 2 == 0){
            return true;
        }else {
            return false;
        }
    }

    //Question-11
    public static String c_profits(int buyPrice, int sellPrice){
        String result = "";
        if (buyPrice == sellPrice){
            result = "no loss";
        }else if(sellPrice < buyPrice){
            result = "loss";
        }else {
            result = "profit";
        }

        return result;
    }

    //Question-12
    public static boolean hamletQuote(boolean first,boolean second){
        if (first == second){
            return false;
        }else {
            return true;
        }
    }

    //Question-13
    public static double waterTax(double usage){
        if (usage < 50){
            return usage+(usage*0.60);
        }else {
            return usage+(usage*0.90);
        }
    }

    //Question-14
    public static boolean threeLocks(boolean first, boolean second, boolean third) {
        boolean result;
       if (first){
           result = second || third; //one of them should be true
       }else{
           result = second && third; // two of them should be true
       }
        return result;
    }

    //Question-15
    public static boolean valideTask(boolean empty, int taskID, int currentID ){
        if (!empty){
            return false;
        }else if ((taskID-1) != currentID){
            return false;
        }else return true;
    }

    //Question-16
    public static boolean simpleRoomBook(boolean gate, int month, int day, int year){
        if (!gate){
            return false;
        }else if(year > 2018){
            return false;
        }else if(month ==7 && month >= 1 && month <= 8){
            return false;
        }else return true;

    }

    //Question-17
    public static boolean getThunderBlazz(boolean ava, boolean gift, int ing1, int ing2, int ing3){
        if (ava || gift){
            return true;
        }else if ((ing1 == 1 & ing2 == 2 && ing3 == 3) || (ing1 ==3 && ing2 ==1 && ing1 ==3) ){
            return true;
        }else return false;
    }

}
